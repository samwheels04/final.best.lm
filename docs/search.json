[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Sam Wheeler Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package proudly brought : Sam Wheeler. Author, maintainer. Dylan Clack. Author. Love fans ! guys make day. ❤️ 😄 Shoutout R master Professor Kabacoff teaching us stuff. ’s great.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wheeler S, Clack D (2023). final.best.lm: Best Linear Model. R package version 0.0.0.9000.","code":"@Manual{,   title = {final.best.lm: Best Linear Model},   author = {Sam Wheeler and Dylan Clack},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"finalbestlm","dir":"","previous_headings":"","what":"Best Linear Model ","title":"Best Linear Model ","text":"ever dependent variable wanted predict certain number predictor variables? wanted find best model predict certain variable? Maybe house price, gas mileage, air pollution? package final.best.lm contains function best.lm create best possible linear model specified number predictor variables. splits data training test set, sizes sets can changed “train_size” parameter. iterates every possible linear model finds best one based adjusted R squared mean squared error.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Best Linear Model ","text":"can install development version final.best.lm like :","code":"if(!require(remotes)){  install.packages(\"remotes\")  } remotes::install_github(\"samwheels04/final.best.lm\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Best Linear Model ","text":"basic example shows solve common problem:","code":"library(final.best.lm) best.linmod(mtcars, \"mpg\", 5, 0.7)"},{"path":"/reference/best.linmod.html","id":null,"dir":"Reference","previous_headings":"","what":"best.linmod — best.linmod","title":"best.linmod — best.linmod","text":"best.lm function create best possible linear model specified number predictor variables. splits data training test set, sizes sets can changed \"train_size\" parameter. iterates every possible linear model finds best one based adjusted R squared mean squared error.","code":""},{"path":"/reference/best.linmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"best.linmod — best.linmod","text":"","code":"best.linmod(   data,   response_var,   num_predictors = length(data) - 1,   train_size = 0.8 )"},{"path":"/reference/best.linmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"best.linmod — best.linmod","text":"data dataset response_var dependent variable num_predictors number predictor variables, default number variables -1 train_size percentage data want allocate training set, default 0.8","code":""},{"path":"/reference/best.linmod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"best.linmod — best.linmod","text":"summary including dependent variable, predictor variables, percentage variation dependent variable predictor variables account .","code":""},{"path":"/reference/best.linmod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"best.linmod — best.linmod","text":"","code":"best.linmod(mtcars, \"mpg\") #> Dependent variable: mpg #> Best 10 predictor variables: cyl + disp + hp + drat + wt + qsec + vs + am + gear + carb #> These predictor variables account for 83.7 % of the variation in your dependent variable. best.linmod(mtcars, \"mpg\", 4, 0.7) #> Dependent variable: mpg #> Best 4 predictor variables: cyl + disp + hp + wt #> These predictor variables account for 86.8 % of the variation in your dependent variable."}]
